{"ast":null,"code":"import _slicedToArray from\"D:/\\u041C\\u043E\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/\\u042F \\u0443 \\u043C\\u0430\\u043C\\u044B \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0441\\u0442/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';// import ReactDOM from 'react-dom/client';\nimport AddPost from'./components/addPost';import Post from'./components/Post';import'./Review.css';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Review(_ref){var inputText=_ref.inputText;// const [messages, setMessages] = useState([]); \n// const [inputText, setInputText] = useState(''); \n// const handleKeyPress = (event) => { \n//   if (event.key === 'Enter') { \n//     sendMessage(); \n//   } \n// }; \n// const sendMessage = () => { \n//   if (inputText !== '') { \n//     setMessages([...messages, inputText]); \n//     setInputText(''); \n//   } \n// }; \n// const [posts, setPosts] = useState([]);\n// const fetchPosts = () => {\n//   fetch(\"http://localhost:3000/api/review\")\n//     .then((response) => response.json())\n//     .then((data) => setPosts(data.data))\n// }\n// useEffect(() => {\n//   fetchPosts()\n// }, []);\n// const addPost = (login, review) => {\n//   fetch('http://localhost:3000/api/review', {\n//     method: 'POST',\n//     body: JSON.stringify({\n//       username: login,\n//       userreview: review\n//       // userId: Math.random().toString(36).slice(2),\n//     }),\n//     headers: {\n//       'Content-type': 'application/json; charset=UTF-8',\n//     },\n//   })\n//     .then((response) => response.json())\n// };\n// const deletePost = (id) => {\n//   fetch(`http://localhost:3000/api/review/${id}`, {\n//     method: 'DELETE'\n//   })\n//     .then((response) => {\n//       if (response.status === 200) {\n//         setPosts(\n//           postsReviews.filter((postsReview) => {\n//             return postsReview.id !== id;\n//           })\n//         )\n//       }\n//     })\n// };\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),postsReviews=_useState2[0],setPostsReviews=_useState2[1];// const handleAddReview = (review) => {\n//   setPostsReviews((prevReviews) => [review, ...prevReviews])\n// }\n// useEffect(() => {\n//   axios\n//     .get('http://localhost:3000/api/review')\n//     // .then((response) => response.json())\n//     .then(data => {\n//       setPostsReviews(data.data);\n//       console.log(data.data)\n//     })\n// }, [])\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputValueReview=_useState4[0],setInputValueReview=_useState4[1];var handleInputChangeReview=function handleInputChangeReview(event){setInputValueReview(event.target.value);};var handleSubmitReview=function handleSubmitReview(event){if(event.key==='Enter'){event.preventDefault();// console.log(inputValueReview)\nsendDataToServerReview();// useEffect(() => {}\ngetValueReview();setInputValueReview('');}};var sendDataToServerReview=function sendDataToServerReview(){fetch('http://localhost:3000/api/review',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({review:inputValueReview,login:inputText})}).then(function(response){return response.json();})// .then((review) => {\n//   setPostsReviews((prevPosts) => [review, ...prevPosts])\n// })\n// .then((data) => {\n//   setPostsReviews((prevPosts)=> [data.data, ...prevPosts]);\n// })\n.catch(function(error){console.error('Ошибка:',error);});};function getValueReview(){// useEffect(() => {\naxios.get('http://localhost:3000/api/review')// .then((response) => response.json())\n.then(function(response){var reversedMessages=response.data.reverse();setPostsReviews(reversedMessages);// setPostsReviews(reversedMessages)\n// setPostsReviews((prevPosts)=> [(data.data), ...prevPosts]);\n// setPostsReviews(data.data);\n// const ptr = data.data\n// setPostsReviews((prevPosts) => [ptr, ...prevPosts])\n// const handleAddReview = (inputValueRev) => {\n//   setPostsReviews((prevPosts) => [inputValueRev, ...prevPosts])\n// }\n// handleAddReview()\n// \nconsole.log(reversedMessages);});// }, [])\n}useEffect(function(){getValueReview();// handleAddReview()\n// console.log(postsReviews)\n},[]);return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"review_wrapper\",children:[/*#__PURE__*/_jsx(AddPost// addPost={addPost} \n,{inputValueReview:inputValueReview,handleInputChangeReview:handleInputChangeReview,handleSubmitReview:handleSubmitReview}),/*#__PURE__*/_jsx(\"section\",{className:\"posts-container\",children:/*#__PURE__*/_jsx(Post,{postsReviews:postsReviews// inputText={inputText}\n// key={postsReview.id}\n// id={postsReviews.id}\n//   title={post.title}\n//   body={post.body}\n// deletePost={deletePost}\n})})]})});};// это строчка я хз за что отвечает но она мешает и зачем то добовляет блок который все портит\n// ReactDOM.createRoot(document.getElementById('root')).render(<Review />);\nexport default Review;","map":{"version":3,"names":["useState","useEffect","AddPost","Post","axios","jsx","_jsx","jsxs","_jsxs","Review","_ref","inputText","_useState","_useState2","_slicedToArray","postsReviews","setPostsReviews","_useState3","_useState4","inputValueReview","setInputValueReview","handleInputChangeReview","event","target","value","handleSubmitReview","key","preventDefault","sendDataToServerReview","getValueReview","fetch","method","headers","body","JSON","stringify","review","login","then","response","json","catch","error","console","get","reversedMessages","data","reverse","log","children","className"],"sources":["D:/Мои проекты/Я у мамы программист/my-app/src/pages/review/Review.jsx"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\nimport AddPost from './components/addPost';\r\nimport Post from './components/Post';\r\nimport './Review.css';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Review({ inputText }) {\r\n\r\n  // const [messages, setMessages] = useState([]); \r\n  // const [inputText, setInputText] = useState(''); \r\n\r\n  // const handleKeyPress = (event) => { \r\n  //   if (event.key === 'Enter') { \r\n  //     sendMessage(); \r\n  //   } \r\n  // }; \r\n  // const sendMessage = () => { \r\n  //   if (inputText !== '') { \r\n  //     setMessages([...messages, inputText]); \r\n  //     setInputText(''); \r\n  //   } \r\n  // }; \r\n\r\n\r\n\r\n  // const [posts, setPosts] = useState([]);\r\n\r\n  // const fetchPosts = () => {\r\n  //   fetch(\"http://localhost:3000/api/review\")\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => setPosts(data.data))\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   fetchPosts()\r\n  // }, []);\r\n\r\n  // const addPost = (login, review) => {\r\n  //   fetch('http://localhost:3000/api/review', {\r\n  //     method: 'POST',\r\n  //     body: JSON.stringify({\r\n  //       username: login,\r\n  //       userreview: review\r\n  //       // userId: Math.random().toString(36).slice(2),\r\n  //     }),\r\n  //     headers: {\r\n  //       'Content-type': 'application/json; charset=UTF-8',\r\n  //     },\r\n  //   })\r\n  //     .then((response) => response.json())\r\n\r\n  // };\r\n\r\n  // const deletePost = (id) => {\r\n  //   fetch(`http://localhost:3000/api/review/${id}`, {\r\n  //     method: 'DELETE'\r\n  //   })\r\n  //     .then((response) => {\r\n  //       if (response.status === 200) {\r\n  //         setPosts(\r\n  //           postsReviews.filter((postsReview) => {\r\n  //             return postsReview.id !== id;\r\n  //           })\r\n  //         )\r\n  //       }\r\n  //     })\r\n  // };\r\n\r\n\r\n  const [postsReviews, setPostsReviews] = useState([]);\r\n  // const handleAddReview = (review) => {\r\n  //   setPostsReviews((prevReviews) => [review, ...prevReviews])\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get('http://localhost:3000/api/review')\r\n  //     // .then((response) => response.json())\r\n  //     .then(data => {\r\n  //       setPostsReviews(data.data);\r\n  //       console.log(data.data)\r\n  //     })\r\n  // }, [])\r\n\r\n\r\n  const [inputValueReview, setInputValueReview] = useState('');\r\n\r\n  const handleInputChangeReview = (event) => {\r\n    setInputValueReview(event.target.value);\r\n    \r\n  };\r\n  const handleSubmitReview = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      // console.log(inputValueReview)\r\n      sendDataToServerReview();\r\n      // useEffect(() => {}\r\n      getValueReview()\r\n      setInputValueReview('');\r\n\r\n\r\n    }\r\n\r\n  };\r\n  const sendDataToServerReview = () => {\r\n    fetch('http://localhost:3000/api/review', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ review: inputValueReview, login: inputText }),\r\n\r\n    })\r\n      .then((response) => response.json())\r\n      // .then((review) => {\r\n      //   setPostsReviews((prevPosts) => [review, ...prevPosts])\r\n      // })\r\n      // .then((data) => {\r\n      //   setPostsReviews((prevPosts)=> [data.data, ...prevPosts]);\r\n      // })\r\n      \r\n\r\n      .catch((error) => {\r\n        console.error('Ошибка:', error);\r\n      });\r\n\r\n\r\n  };\r\n  function getValueReview() {\r\n      // useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3000/api/review')\r\n      // .then((response) => response.json())\r\n      .then((response) => {\r\n        const reversedMessages = response.data.reverse();\r\n        setPostsReviews(reversedMessages)\r\n        // setPostsReviews(reversedMessages)\r\n        // setPostsReviews((prevPosts)=> [(data.data), ...prevPosts]);\r\n        // setPostsReviews(data.data);\r\n        // const ptr = data.data\r\n                  // setPostsReviews((prevPosts) => [ptr, ...prevPosts])\r\n\r\n        // const handleAddReview = (inputValueRev) => {\r\n        //   setPostsReviews((prevPosts) => [inputValueRev, ...prevPosts])\r\n        // }\r\n        // handleAddReview()\r\n        // \r\n        console.log(reversedMessages)\r\n\r\n      })\r\n  // }, [])\r\n  }\r\n  useEffect(() => {\r\n    getValueReview();\r\n    // handleAddReview()\r\n    // console.log(postsReviews)\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <main>\r\n      <div className='review_wrapper'>\r\n        <AddPost\r\n          // addPost={addPost} \r\n          inputValueReview={inputValueReview}\r\n          handleInputChangeReview={handleInputChangeReview}\r\n          handleSubmitReview={handleSubmitReview}\r\n        />\r\n        <section className=\"posts-container\">\r\n          {/* {postsReviews.map((postsReview) => */}\r\n          <Post\r\n            postsReviews={postsReviews}\r\n\r\n            // inputText={inputText}\r\n            // key={postsReview.id}\r\n            // id={postsReviews.id}\r\n            //   title={post.title}\r\n            //   body={post.body}\r\n            // deletePost={deletePost}\r\n          />\r\n          {/* )} */}\r\n        </section>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/*<div className='cont_review_wrapper'> \r\n        <div className=\"review_wrapper\"> \r\n          <div className=\"input-area\"> \r\n            <input className='review_input' type=\"text\" value={inputText} onChange={(event) => setInputText(event.target.value)} onKeyPress={handleKeyPress} placeholder='Оставить отзыв' /> \r\n            <button className='btn_review' onClick={sendMessage}>Отправить</button> \r\n          </div> \r\n          <div className=\"chat-window\"> \r\n            {messages.map((message, index) => ( \r\n \r\n              <div key={index} className=\"message\"> \r\n                <p className='review_text'>{message} </p> \r\n              </div> \r\n            ))} \r\n          </div> \r\n \r\n            </div>  \r\n \r\n      </div>  */}\r\n    </main>\r\n  );\r\n};\r\n// это строчка я хз за что отвечает но она мешает и зачем то добовляет блок который все портит\r\n// ReactDOM.createRoot(document.getElementById('root')).render(<Review />);\r\nexport default Review;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}